# -*- coding: utf-8 -*-
project   = "benchmarker"
release   = "$Release: 0.0.0 $".split()[1]
copyright = "copyright(c) 2010-2021 kuwata-lab.com all rights reserved"
license   = "MIT License"

require 'fileutils'
include FileUtils

require 'rake/clean'
CLEAN.include("build/#{project}-#{release}")
CLOBBER.include("build")


task :default => :test

def _do_test(ruby="ruby")
  sh "#{ruby} -r oktest -e 'Oktest.main' -- test -sc"
end

desc "do test"
task :test do
  _do_test("ruby")
end

ruby_vers = %w[2.0.0-p648 2.1.10 2.2.10 2.3.8 2.4.10 2.5.8 2.6.2 2.7.1 3.0.2]

desc "do test on multiple ruby versions"
task :'test:all' do
  ruby_vers.each do |ruby_ver|
    puts "========== ruby #{ruby_ver} =========="
    ruby = "#{ENV['VS_HOME']}/ruby/#{ruby_ver}/bin/ruby"
    _do_test(ruby)
  end
end


def copy_into(*args)
  args = args.flatten
  dir = args.pop
  mkdir_p dir unless File.exists?(dir)
  cp_r args, dir
end


def edit_files(*filenames, &block)
  filenames.flatten.each do |fname|
    Dir.glob(fname).each do |fpath|
      next unless File.file?(fpath)
      s = File.open(fpath, 'rb') {|f| f.read() }
      s = block.arity == 2 ? yield(s, fpath) : yield(s)
      File.open(fpath, 'wb') {|f| f.write(s) }
    end
  end
end


desc "create 'build/#{project}-#{release}/' and copy files to it"
task :build do
  release = ENV['rel']  or
    raise "rake: requires 'rel=X.X.X'"
  dir = "build/#{project}-#{release}"
  #rm_rf dir if File.exist?(dir)
  fnames = Dir.glob("#{dir}*")
  rm_rf fnames unless fnames.empty?
  mkdir_p dir
  ## store
  cp_r %W[README.md CHANGES.md Rakefile MIT-LICENSE #{project}.gemspec setup.rb], dir
  copy_into Dir.glob("lib/*.rb"),      "#{dir}/lib"
  copy_into Dir.glob("test/*test.rb"), "#{dir}/test"
  #copy_into Dir.glob("examples/*.rb"), "#{dir}/examples"
  ## edit
  edit_files("#{dir}/**/*") do |content, filename|
    if ! %w[setup.rb].include?(File.basename(filename))
      content.gsub! /[\$]Release:.*?\$/,   "$""Release: #{release} $"      #"
      content.gsub! /[\$]Copyright:.*?\$/, "$""Copyright: #{copyright} $"  #"
      content.gsub! /[\$]License:.*?\$/,   "$""License: #{license} $"      #"
      content.gsub! /[\$]Release\$/,   release
      content.gsub! /[\$]Copyright\$/, copyright
      content.gsub! /[\$]License\$/,   license
    end
    content
  end
end


desc "create gem package"
task :package => :build do
  release = ENV['rel']  or
    raise "rake package: requires 'rel=X.X.X'"
  base = "#{project}-#{release}"
  #chdir "build" do
  #  sh "tar cf #{base}.tar.gz #{base}"
  #end
  chdir "build/#{base}" do
    sh "gem build #{project}.gemspec"
    mv Dir.glob("#{project}-*.gem"), ".."
  end
end
